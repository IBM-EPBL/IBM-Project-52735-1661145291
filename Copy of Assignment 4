{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1h897eMBRQ5Wc55B3WzQpFnjuCzp4KuNv","timestamp":1667530602560}],"collapsed_sections":[],"authorship_tag":"ABX9TyPDl4ycLJ5GzHbUMhtqIqqh"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["2.Import Required Library"],"metadata":{"id":"SmzGvjonbAHr"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import LabelEncoder\n","from keras.models import Model\n","from keras.layers import LSTM,Activation,Dense,Dropout,Input,Embedding\n","from keras.optimizers import RMSprop\n","from keras.preprocessing.text import Tokenizer\n","from keras.preprocessing import sequence\n","from keras.utils import to_categorical\n","from keras.callbacks import EarlyStopping\n","from keras.models import load_model"],"metadata":{"id":"LSqlkwzebJi_"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["3.Read the dataset and do pre_processing"],"metadata":{"id":"0tC5LJOdcF6S"}},{"cell_type":"code","source":["df=pd.read_csv('/content/spam.csv',delimiter=',',encoding='latin-1')\n","df.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"ESoyIOTwchon","executionInfo":{"status":"ok","timestamp":1667528761710,"user_tz":-330,"elapsed":550,"user":{"displayName":"Shylu Mari","userId":"13683299793022101762"}},"outputId":"d672fe1e-26db-4e97-e202-28aba0bfd2ba"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     v1                                                 v2 Unnamed: 2  \\\n","0   ham  Go until jurong point, crazy.. Available only ...        NaN   \n","1   ham                      Ok lar... Joking wif u oni...        NaN   \n","2  spam  Free entry in 2 a wkly comp to win FA Cup fina...        NaN   \n","3   ham  U dun say so early hor... U c already then say...        NaN   \n","4   ham  Nah I don't think he goes to usf, he lives aro...        NaN   \n","5  spam  FreeMsg Hey there darling it's been 3 week's n...        NaN   \n","6   ham  Even my brother is not like to speak with me. ...        NaN   \n","7   ham  As per your request 'Melle Melle (Oru Minnamin...        NaN   \n","8  spam  WINNER!! As a valued network customer you have...        NaN   \n","9  spam  Had your mobile 11 months or more? U R entitle...        NaN   \n","\n","  Unnamed: 3 Unnamed: 4  \n","0        NaN        NaN  \n","1        NaN        NaN  \n","2        NaN        NaN  \n","3        NaN        NaN  \n","4        NaN        NaN  \n","5        NaN        NaN  \n","6        NaN        NaN  \n","7        NaN        NaN  \n","8        NaN        NaN  \n","9        NaN        NaN  "],"text/html":["\n","  <div id=\"df-e6299fd5-30d9-4be8-a8f6-d7e338391ce5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>v1</th>\n","      <th>v2</th>\n","      <th>Unnamed: 2</th>\n","      <th>Unnamed: 3</th>\n","      <th>Unnamed: 4</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ham</td>\n","      <td>Go until jurong point, crazy.. Available only ...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ham</td>\n","      <td>Ok lar... Joking wif u oni...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>spam</td>\n","      <td>Free entry in 2 a wkly comp to win FA Cup fina...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ham</td>\n","      <td>U dun say so early hor... U c already then say...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>ham</td>\n","      <td>Nah I don't think he goes to usf, he lives aro...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>spam</td>\n","      <td>FreeMsg Hey there darling it's been 3 week's n...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>ham</td>\n","      <td>Even my brother is not like to speak with me. ...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>ham</td>\n","      <td>As per your request 'Melle Melle (Oru Minnamin...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>spam</td>\n","      <td>WINNER!! As a valued network customer you have...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>spam</td>\n","      <td>Had your mobile 11 months or more? U R entitle...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e6299fd5-30d9-4be8-a8f6-d7e338391ce5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e6299fd5-30d9-4be8-a8f6-d7e338391ce5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e6299fd5-30d9-4be8-a8f6-d7e338391ce5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ezmUpIZhdhNR","executionInfo":{"status":"ok","timestamp":1667528809640,"user_tz":-330,"elapsed":1437,"user":{"displayName":"Shylu Mari","userId":"13683299793022101762"}},"outputId":"7145acc7-cca3-4563-8b1e-0fdae66a2169"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 5572 entries, 0 to 5571\n","Data columns (total 5 columns):\n"," #   Column      Non-Null Count  Dtype \n","---  ------      --------------  ----- \n"," 0   v1          5572 non-null   object\n"," 1   v2          5572 non-null   object\n"," 2   Unnamed: 2  50 non-null     object\n"," 3   Unnamed: 3  12 non-null     object\n"," 4   Unnamed: 4  6 non-null      object\n","dtypes: object(5)\n","memory usage: 217.8+ KB\n"]}]},{"cell_type":"markdown","source":["4.Create Model"],"metadata":{"id":"1a0Yu9tjdp0K"}},{"cell_type":"code","source":["sns.countplot(df.v1)\n","plt.xlabel('Label')\n","plt.title('Number of ham and spam message')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":367},"id":"HmUrmnU_dzq3","executionInfo":{"status":"ok","timestamp":1667528919444,"user_tz":-330,"elapsed":32,"user":{"displayName":"Shylu Mari","userId":"13683299793022101762"}},"outputId":"e05a1b2b-23b2-435c-94e0-b7ba3ad5b3bc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  FutureWarning\n"]},{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Number of ham and spam message')"]},"metadata":{},"execution_count":4},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["X=df.v2\n","Y=df.v1\n","le=LabelEncoder()\n","Y=le.fit_transform(Y)\n","Y=Y.reshape(-1,1)"],"metadata":{"id":"ptPIMgfceVXN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.15)"],"metadata":{"id":"jJtwkE8_etdR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["max_words=1000\n","max_len=150\n","tok=Tokenizer(num_words=max_words)\n","tok.fit_on_texts(X_train)\n","sequences=tok.texts_to_sequences(X_train)"],"metadata":{"id":"hILbEPTke6bf"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["5.Add Layers"],"metadata":{"id":"bR9RpZ2Nfq6v"}},{"cell_type":"code","source":["inputs=Input(name='inputs',shape=[max_len])\n","layer=Embedding(max_words,50,input_length=max_len)(inputs)\n","layer=LSTM(64)(layer)\n","layer=Dense (256,name='FC1')(layer)\n","layer=Activation('relu')(layer)\n","layer=Dropout(0.5)(layer)\n","layer=Dense(1,name='out_layer')(layer)\n","layer=Activation('sigmoid')(layer)\n","model=Model(inputs=inputs,outputs=layer)"],"metadata":{"id":"vaVoaMQ5fzJ_"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["6.Compile The Model"],"metadata":{"id":"Q763VN7egc4h"}},{"cell_type":"code","source":["model.compile(loss='binary_crossentropy',optimizer=RMSprop(),metrics=['accuracy'])\n","model=Model(inputs=inputs,outputs=layer)\n","model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-3A5OBBTgpfg","executionInfo":{"status":"ok","timestamp":1667529678158,"user_tz":-330,"elapsed":475,"user":{"displayName":"Shylu Mari","userId":"13683299793022101762"}},"outputId":"8d1e048a-f4fb-4374-b3b3-2eb2915e4c4d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model_1\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," inputs (InputLayer)         [(None, 150)]             0         \n","                                                                 \n"," embedding (Embedding)       (None, 150, 50)           50000     \n","                                                                 \n"," lstm (LSTM)                 (None, 64)                29440     \n","                                                                 \n"," FC1 (Dense)                 (None, 256)               16640     \n","                                                                 \n"," activation (Activation)     (None, 256)               0         \n","                                                                 \n"," dropout (Dropout)           (None, 256)               0         \n","                                                                 \n"," out_layer (Dense)           (None, 1)                 257       \n","                                                                 \n"," activation_1 (Activation)   (None, 1)                 0         \n","                                                                 \n","=================================================================\n","Total params: 96,337\n","Trainable params: 96,337\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"markdown","source":["7.Fit The Model"],"metadata":{"id":"S23B_dNzhGmY"}},{"cell_type":"code","source":["from keras.callbacks import EarlyStopping,ReduceLROnPlateau"],"metadata":{"id":"qCqH46TfhOMZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from pandas._libs.tslibs.parsing import parse_time_string\n","early_stopping=EarlyStopping(monitor='val_accuracy',patience=5)\n","reduce_lr=ReduceLROnPlateau(monitor='val_accuracy',patience=5,factor=0.5,min_lr=0.00001)\n","callback=[reduce_lr,early_stopping]"],"metadata":{"id":"DgWgkr--hv6p"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model.fit(sequences_matrix,y_train,batch_size=128,epochs=10,validation_split=0.2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":130},"id":"VlIgs1gXh53H","executionInfo":{"status":"error","timestamp":1667530221430,"user_tz":-330,"elapsed":30,"user":{"displayName":"Shylu Mari","userId":"13683299793022101762"}},"outputId":"fb0682de-952e-441b-c61d-4b1b135b0710"},"execution_count":null,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"ignored","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-13-87a858fe168a>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    model.fit(sequences_matrix,y_train,batch_size=128,epochs=10,validation_split=0.2\u001b[0m\n\u001b[0m                                                                                    ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m unexpected EOF while parsing\n"]}]},{"cell_type":"markdown","source":["8.Save The Model"],"metadata":{"id":"0AXq5wv5jn7g"}},{"cell_type":"code","source":["model.save('model.h5')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"q7VefL55jth2","executionInfo":{"status":"ok","timestamp":1667530513616,"user_tz":-330,"elapsed":466,"user":{"displayName":"Shylu Mari","userId":"13683299793022101762"}},"outputId":"3b10d66f-e061-4595-c192-6e8d59996440"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n"]}]},{"cell_type":"markdown","source":["9.Test The Model"],"metadata":{"id":"FeywmtCbkJwk"}},{"cell_type":"code","source":["test_sequences=tok.texts_to_sequences(X_test)"],"metadata":{"id":"8grYugnrkM5_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Cp5usZPSkR1V","executionInfo":{"status":"ok","timestamp":1667530571553,"user_tz":-330,"elapsed":31,"user":{"displayName":"Shylu Mari","userId":"13683299793022101762"}},"outputId":"8add9ab4-c097-4b35-e562-bef231b9006b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<keras.engine.functional.Functional at 0x7fce61e6cc50>"]},"metadata":{},"execution_count":16}]}]}